#!/bin/sh
# ARToolKit Configure for Linux Video Devices
#
#####################################################

MDIR=". \
      lib/SRC \
      lib/SRC/AR lib/SRC/ARMulti lib/SRC/Gl \
      lib/SRC/VideoLinux1394Cam lib/SRC/VideoLinuxDV \
      lib/SRC/VideoLinuxV4L lib/SRC/VideoLinuxV4L2 \
      lib/SRC/VideoSGI \
      lib/SRC/VideoMacOSX \
      lib/SRC/VideoGStreamer \
      lib/SRC/ARvrml \
      util \
      util/calib_camera2 util/calib_cparam util/calib_distortion \
      util/mk_patt util/graphicsTest util/videoTest \
      examples \
      examples/collide  examples/exview \
      examples/loadMultiple  examples/modeTest  examples/multi  examples/optical  \
      examples/paddle examples/paddleDemo examples/paddleInteraction examples/range \
      examples/relation examples/simple examples/simple2 examples/simpleLite \
      examples/twoView examples/simpleVRML \
      "

SED=/tmp/SED.$$
trap "rm -f $SED; exit 0" 0 1 2 3 15

ARCH="x86"
echo "Assuming x86 architecture (by patch of 2010/10/03)"

E=`uname`
if [ "$E" = "Linux" ]
then
    echo "Selecting video capture driver."
    echo "-> GStreamer Media Framework"
    VIDEO_DRIVER="VideoGStreamer"
	GST_INCLUDE=`pkg-config --cflags gstreamer-0.10`
	GST_LIBS=`pkg-config --libs gstreamer-0.10`
	CFLAG="-O $GST_INCLUDE -I/usr/X11R6/include"
    LDFLAG="$GST_LIBS -L/usr/X11R6/lib -L/usr/local/lib"
    ARFLAG="rs"
    RANLIB=""
    LIBS="-lpthread -lglut -lGLU -lGL -lXi -lX11 -lm $GST_LIBS"
    CONFIG="AR_INPUT_GSTREAMER"
    CFLAG="$CFLAG"    # debug mode off
    # CFLAG="$CFLAG -g" # debug mode on
elif [ "$E" = "IRIX" ]
then
    VIDEO_DRIVER="VideoSGI"
    CFLAG="-O -n32"
    LDFLAG="-n32"
    ARFLAG="rs"
    RANLIB=""
    LIBS="-lglut -lGLU -lGL -lXmu -lX11 -lvl -lm"
elif [ "$E" = "IRIX64" ]
then
    VIDEO_DRIVER="VideoSGI"
    CFLAG="-O -n32"
    LDFLAG="-n32"
    ARFLAG="rs"
    RANLIB=""
    LIBS="-lglut -lGLU -lGL -lXmu -lX11 -lvl -lm"
elif [ "$E" = "Darwin" ]
then
    VIDEO_DRIVER="VideoMacOSX"
    CFLAG="-O"
    LDFLAG=""
    ARFLAG="-r"
    RANLIB="ranlib \$\@"
    LIBS="-framework Carbon -framework QuickTime -framework GLUT -framework OpenGL -framework AppKit -framework Foundation -lobjc"

    echo "Does your Mac have fast texture mapping hardware? (y or n)"
    echo -n "Enter : "
    read ANS
    if [ "$ANS" = "y" ]
    then
        APPLE_FAST_TEX="y"
    elif [ "$ANS" = "n" ]
    then
        APPLE_FAST_TEX="n"
    else
        echo "Please enter y or n."
        exit 0
    fi
else
    echo "This configure command supports Linux, IRIX and MacOSX."
    exit 0
fi

NVEXT="y" # texture rectangle support

echo $VIDEO_DRIVER | sed -e 's/\//\\\//g' >$SED
VIDEO_DRIVER=`cat $SED`
echo $CFLAG | sed -e 's/\//\\\//g' >$SED
CFLAG=`cat $SED`
echo $LDFLAG | sed -e 's/\//\\\//g' >$SED
LDFLAG=`cat $SED`
echo $ARFLAG | sed -e 's/\//\\\//g' >$SED
ARFLAG=`cat $SED`
echo $RANLIB | sed -e 's/\//\\\//g' >$SED
RANLIB=`cat $SED`
echo $LIBS | sed -e 's/\//\\\//g' >$SED
LIBS=`cat $SED`
echo $CCVT_OBJ | sed -e 's/\//\\\//g' >$SED
CCVT_OBJ=`cat $SED`

cat > $SED <<EOF
s/@VIDEO_DRIVER@/$VIDEO_DRIVER/
s/@CFLAG@/$CFLAG/
s/@LDFLAG@/$LDFLAG/
s/@ARFLAG@/$ARFLAG/
s/@RANLIB@/$RANLIB/
s/@LIBS@/$LIBS/
s/@CCVT_OBJ@/$CCVT_OBJ/
EOF


for i in $MDIR
do
    echo "  create $i/Makefile"
    sed -f $SED <$i/Makefile.in > $i/Makefile
done

if [ "$NVEXT" = "y" ]
then
cat > $SED <<EOF
s/#undef    AR_OPENGL_TEXTURE_RECTANGLE/#define    AR_OPENGL_TEXTURE_RECTANGLE/
EOF
elif [ "$NVEXT" = "n" ]
then
cat > $SED <<EOF
s/#undef    AR_OPENGL_TEXTURE_RECTANGLE/#undef    AR_OPENGL_TEXTURE_RECTANGLE/
EOF
fi

if [ "$APPLE_FAST_TEX" = "y" ]
then
cat >> $SED <<EOF
s/#undef    APPLE_TEXTURE_FAST_TRANSFER/#define   APPLE_TEXTURE_FAST_TRANSFER/
EOF
fi

if [ $CONFIG ]
then
UNDEF="#undef  $CONFIG"
DEF="#define  $CONFIG"
cat >> $SED <<EOF
s/$UNDEF/$DEF/
EOF
fi

echo "  create include/AR/config.h"
sed -f $SED <include/AR/config.h.in > include/AR/config.h

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
mkdir $DIR/bin

echo "Done."
